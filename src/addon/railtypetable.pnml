 /// railtypetable

// Список меток типов рельсов
railtypetable {
// автономная
  TS_R: [SAAN,SABN,SACN,SADN,SAEN,  RAIL],
// переменного тока 25 кВ 50 Гц
  TS_A: [SAAA,SABA,SACA,SADA,SAEA,
         SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// переменного тока 15 кВ 50 Гц
  TS_a: [SAAa,SABa,SACa,SADa,SAEa,
         SAAA,SABA,SACA,SADA,SAEA,
         SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// постоянного тока 3 кВ
  TS_D: [SAAD,SABD,SACD,SADD,SAED,
         SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// постоянного тока 1,5 кВ
  TS_d: [SAAd,SABd,SACd,SADd,SAEd,
         SAAD,SABD,SACD,SADD,SAED,
         SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// многосистемные
// A + D (3 кВ + 25 кВ)
  A_D_: ["SAA)",               SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// D + d (1,5 кВ + 3 кВ)
  __Dd: ["SAA=",               SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// A + d (TGV-PSE)
  A__d: ["SAA(",               SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// A + D + d (ETR500)
  A_Dd: ["SAA_",               SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// A + a + d (TGV-POS)
  Aa_d: ["SAA^",               SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// A + a + D +d (ETR575)
  AaDd: ["SAA*",               SAAE,SABE,SACE,SADE,SAEE,  ELRL]
}

// обычные рельсы
#define get_normal_track_type(speedkmh)           TS_R
#define get_normal_track_type_steam_lowspeed()    TS_R
#define get_normal_track_type_steam()             TS_R
#define get_normal_track_type_steam_highspeed()   TS_R
#define get_normal_track_type_diesel_lowspeed()   TS_R
#define get_normal_track_type_diesel()            TS_R
#define get_normal_track_type_diesel_highspeed()  TS_R
#define get_normal_track_type_dmu_lowspeed()      TS_R
#define get_normal_track_type_dmu()               TS_R
#define get_normal_track_type_dmu_highspeed()     TS_R
// рельсы для постоянного и переменного тока
#define get_ac_track_type_lowspeed()         TS_A
#define get_ac_track_type()                  TS_A
#define get_ac_track_type_highspeed()        TS_A
#define get_ac_track_type_emu_lowspeed()     TS_A
#define get_ac_track_type_emu()              TS_A
#define get_ac_track_type_emu_highspeed()    TS_A
#define get_15ac_track_type_lowspeed()       TS_a
#define get_15ac_track_type()                TS_a
#define get_15ac_track_type_highspeed()      TS_a
#define get_15ac_track_type_emu_lowspeed()   TS_a
#define get_15ac_track_type_emu()            TS_a
#define get_15ac_track_type_emu_highspeed()  TS_a
#define get_dc_track_type_lowspeed()         TS_D
#define get_dc_track_type()                  TS_D
#define get_dc_track_type_highspeed()        TS_D
#define get_dc_track_type_emu_lowspeed()     TS_D
#define get_dc_track_type_emu()              TS_D
#define get_dc_track_type_emu_highspeed()    TS_D
#define get_15dc_track_type_lowspeed()       TS_d
#define get_15dc_track_type()                TS_d
#define get_15dc_track_type_highspeed()      TS_d
#define get_15dc_track_type_emu_lowspeed()   TS_d
#define get_15dc_track_type_emu()            TS_d
#define get_15dc_track_type_emu_highspeed()  TS_d
// для двусистемных
#define get_ddc_track_type_lowspeed()          __Dd
#define get_ddc_track_type()                   __Dd
#define get_ddc_track_type_highspeed()         __Dd
#define get_ddc_track_type_emu_lowspeed()      __Dd
#define get_ddc_track_type_emu()               __Dd
#define get_ddc_track_type_emu_highspeed()     __Dd
#define get_ac15dc_track_type_lowspeed()       A__d
#define get_ac15dc_track_type()                A__d
#define get_ac15dc_track_type_highspeed()      A__d
#define get_ac15dc_track_type_emu_lowspeed()   A__d
#define get_ac15dc_track_type_emu()            A__d
#define get_ac15dc_track_type_emu_highspeed()  A__d
#define get_acdc_track_type_lowspeed()         A_D_
#define get_acdc_track_type()                  A_D_
#define get_acdc_track_type_highspeed()        A_D_
#define get_acdc_track_type_emu_lowspeed()     A_D_
#define get_acdc_track_type_emu()              A_D_
#define get_acdc_track_type_emu_highspeed()    A_D_
#define get_acddc_track_type_lowspeed()        A_Dd
#define get_acddc_track_type()                 A_Dd
#define get_acddc_track_type_highspeed()       A_Dd
#define get_acddc_track_type_emu_lowspeed()    A_Dd
#define get_acddc_track_type_emu()             A_Dd
#define get_acddc_track_type_emu_highspeed()   A_Dd
#define get_aac15dc_track_type_lowspeed()      Aa_d
#define get_aac15dc_track_type()               Aa_d
#define get_aac15dc_track_type_highspeed()     Aa_d
#define get_aac15dc_track_type_emu_lowspeed()  Aa_d
#define get_aac15dc_track_type_emu()           Aa_d
#define get_aac15dc_track_type_emu_highspeed() Aa_d
#define get_aacddc_track_type_lowspeed()       AaDd
#define get_aacddc_track_type()                AaDd
#define get_aacddc_track_type_highspeed()      AaDd
#define get_aacddc_track_type_emu_lowspeed()   AaDd
#define get_aacddc_track_type_emu()            AaDd
#define get_aacddc_track_type_emu_highspeed()  AaDd

// Шаблоны для родов тока
#define not_ER15DC()                   \
((tile_powers_railtype("TS_d") == 0))  \

#define not_ER3DC()                    \
((tile_powers_railtype("TS_D") == 0))  \

#define not_ER15AC()                   \
((tile_powers_railtype("TS_a") == 0))  \

#define not_ER25AC()                   \
((tile_powers_railtype("TS_A") == 0))  \

#define is_ER15DC()                    \
((tile_powers_railtype("TS_d") == 1))  \

#define is_ER3DC()                     \
((tile_powers_railtype("TS_D") == 1))  \

#define is_ER15AC()                    \
((tile_powers_railtype("TS_a") == 1))  \

#define is_ER25AC()                    \
((tile_powers_railtype("TS_A") == 1))  \

#define is_ER15DC_ds(name, nameERDD, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER15DC())     \
{ 1: nameERDD;                                   \
     nameother; }                                \

#define is_ER3DC_ds(name, nameERD, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER3DC())    \
{ 1: nameERD;                                  \
     nameother; }                              \

#define is_ER15AC_ds(name, nameERAA, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER15AC())     \
{ 1: nameERAA;                                   \
     nameother; }                                \

#define is_ER25AC_ds(name, nameERA, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER25AC())    \
{ 1: nameERA;                                   \
     nameother; }                               \

// Определение свойств в зависимости от типа пути

#define engine_change_DDC(name, suffix)                         \
is_ER15DC_ds(name##_2##suffix, name##_15DC##suffix, return 0)   \
is_ER3DC_ds(name##suffix, name##_DC##suffix, name##_2##suffix)  \

#define engine_change_AC_DC(name)                                \
is_ER3DC_ds(name##_2##suffix, name##_DC##suffix, return 0)       \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)  \

#define engine_change_AAC_DC(name)                                     \
is_ER3DC_ds(name##_3##suffix, name##_DC##suffix, return 0)             \
is_ER15AC_ds(name##_2##suffix, name##_15AC##suffix, name##_3##suffix)  \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)        \

#define engine_change_AAC_DDC(name)                                    \
is_ER15DC_ds(name##_4##suffix, name##_15DC##suffix, return 0)          \
is_ER3DC_ds(name##_3##suffix, name##_DC##suffix, name##_4##suffix)     \
is_ER15AC_ds(name##_2##suffix, name##_15AC##suffix, name##_3##suffix)  \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)        \

// end
