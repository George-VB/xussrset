 /// railtypetable

// TODO it is intended, that no set provides Broad rais (but CEEv4 does), and because of that they are not included in the alternatives list, that is not correct
// TODO support for broad rails should be provided
// Список меток типов рельсов
railtypetable {
// автономная
  T_R0: [RLA0,       RLA1,  SAAN,SABN,SACN,SADN,SAEN,  RAIL],
  T_R1: [RLA2,       RLA1,  SBAN,SBBN,SBCN,SBDN,SBEN,  SAAN,SABN,SACN,SADN,SAEN,  RAIL],
  T_R2: [RLA3,RLA4,  RLA1,  SCAN,SCBN,SCCN,SCDN,SCEN,  SBAN,SBBN,SBCN,SBDN,SBEN,  SAAN,SABN,SACN,SADN,SAEN,  RAIL],
// переменного тока 25 кВ 50 Гц
  T_A0: [ERA0,       ERA1,  SAAA,SABA,SACA,SADA,SAEA,                                                        SAAE,SABE,SACE,SADE,SAEE,                                                        ELRL],
  T_A1: [ERA2,       ERA1,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,                             SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,                             ELRL],
  T_A2: [ERA3,ERA4,  ERA1,  SCAA,SCBA,SCCA,SCDA,SCEA,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// переменного тока 15 кВ 50 Гц
  T_a0: [ERa0,       ERa1,  ERA0,ERA1,  SAAa,SABa,SACa,SADa,SAEa,                                                        SAAA,SABA,SACA,SADA,SAEA,                                                        SAAE,SABE,SACE,SADE,SAEE,                                                        ELRL],
  T_a1: [ERa2,       ERa1,  ERA2,       SBAa,SBBa,SBCa,SBDa,SBEa,  SAAa,SABa,SACa,SADa,SAEa,                             SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,                             SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,                             ELRL],
  T_a2: [ERa3,ERa4,  ERa1,  ERA3,ERA4,  SCAa,SCBa,SCCa,SCDa,SCEa,  SBAa,SBBa,SBCa,SBDa,SBEa,  SAAa,SABa,SACa,SADa,SAEa,  SCAA,SCBA,SCCA,SCDA,SCEA,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// постоянного тока 3 кВ
  T_D0: [ERD0,       ERD1,  ERA0,ERA1,  SAAD,SABD,SACD,SADD,SAED,                                                        SAAA,SABA,SACA,SADA,SAEA,                                                        SAAE,SABE,SACE,SADE,SAEE,                                                        ELRL],
  T_D1: [ERD2,       ERD1,  ERA2,       SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,                             SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,                             SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,                             ELRL],
  T_D2: [ERD3,ERD4,  ERD1,  ERA3,ERA4,  SCAD,SCBD,SCCD,SCDD,SCED,  SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,  SCAA,SCBA,SCCA,SCDA,SCEA,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// постоянного тока 1,5 кВ
  T_d0: [ERd0,       ERd1,  ERD0,ERD1,  ERA0,ERA1,  SAAd,SABd,SACd,SADd,SAEd,                                                        SAAD,SABD,SACD,SADD,SAED,                                                        SAAA,SABA,SACA,SADA,SAEA,                                                        SAAE,SABE,SACE,SADE,SAEE,                                                        ELRL],
  T_d1: [ERd2,       ERd1,  ERD2,       ERA2,       SBAd,SBBd,SBCd,SBDd,SBEd,  SAAd,SABd,SACd,SADd,SAEd,                             SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,                             SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,                             SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,                             ELRL],
  T_d2: [ERd3,ERd4,  ERd1,  ERD3,ERD4,  ERA3,ERA4,  SCAd,SCBd,SCCd,SCDd,SCEd,  SBAd,SBBd,SBCd,SBDd,SBEd,  SAAd,SABd,SACd,SADd,SAEd,  SCAD,SCBD,SCCD,SCDD,SCED,  SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,  SCAA,SCBA,SCCA,SCDA,SCEA,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// многосистемные
// 2S = A + D (3 кВ + 25 кВ)
  T_2S: [ER2S,  "SAA)",  SEAA,SEBA,SECA,SEDA,SEEA,  SDAA,SDBA,SDCA,SDDA,SDEA,  SCAA,SCBA,SCCA,SCDA,SCEA,  SBAA,SBBA,SBCA,SBDA,SBEA,  SAAA,SABA,SACA,SADA,SAEA,  SEAD,SEBD,SECD,SEDD,SEED,  SDAD,SDBD,SDCD,SDDD,SDED,  SCAD,SCBD,SCCD,SCDD,SCED,  SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,    SEAE,SEBE,SECE,SEDE,SEEE,  SDAE,SDBE,SDCE,SDDE,SDEE,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// 2D = D + d (1,5 кВ + 3 кВ)
  T_2D: [ER2D,  "SAA=",  SEAD,SEBD,SECD,SEDD,SEED,  SDAD,SDBD,SDCD,SDDD,SDED,  SCAD,SCBD,SCCD,SCDD,SCED,  SBAD,SBBD,SBCD,SBDD,SBED,  SAAD,SABD,SACD,SADD,SAED,  SEAd,SEBd,SECd,SEDd,SEEd,  SDAd,SDBd,SDCd,SDDd,SDEd,  SCAd,SCBd,SCCd,SCDd,SCEd,  SBAd,SBBd,SBCd,SBDd,SBEd,  SAAd,SABd,SACd,SADd,SAEd,    SEAE,SEBE,SECE,SEDE,SEEE,  SDAE,SDBE,SDCE,SDDE,SDEE,  SCAE,SCBE,SCCE,SCDE,SCEE,  SBAE,SBBE,SBCE,SBDE,SBEE,  SAAE,SABE,SACE,SADE,SAEE,  ELRL],
// метро
  T_SW: [SW1L,  BAA3,BAB3,BAC3,BAD3,BAE3, SAA3,SAB3,SAC3,SAD3,SAE3, "3DRL", "3RDR", MTRO],
  T_SA: [SW1R,  B3A3,B3B3,B3C3,B3D3,B3E3, S3A3,S3B3,S3C3,S3D3,S3E3, "3DRL", "3RDR", MTRO, SAAN, RAIL],
}

// обычные рельсы
#define get_normal_track_type(speedkmh)             (speedkmh < 100 ? T_R0  : speedkmh < 140 ? T_R1 : T_R2)
#define get_normal_track_type_steam_lowspeed()      T_R0
#define get_normal_track_type_steam()               T_R1
#define get_normal_track_type_steam_highspeed()     T_R2
#define get_normal_track_type_diesel_lowspeed()     T_R0
#define get_normal_track_type_diesel()              T_R1
#define get_normal_track_type_diesel_highspeed()    T_R2
#define get_normal_track_type_dmu_lowspeed()        T_R0
#define get_normal_track_type_dmu()                 T_R1
#define get_normal_track_type_dmu_highspeed()       T_R2
// рельсы для постоянного и переменного тока
#define get_ac_track_type_lowspeed()         T_A0
#define get_ac_track_type()                  T_A1
#define get_ac_track_type_highspeed()        T_A2
#define get_ac_track_type_emu_lowspeed()     T_A0
#define get_ac_track_type_emu()              T_A1
#define get_ac_track_type_emu_highspeed()    T_A2
#define get_15ac_track_type_lowspeed()       T_a0
#define get_15ac_track_type()                T_a1
#define get_15ac_track_type_highspeed()      T_a2
#define get_15ac_track_type_emu_lowspeed()   T_a0
#define get_15ac_track_type_emu()            T_a1
#define get_15ac_track_type_emu_highspeed()  T_a2
#define get_dc_track_type_lowspeed()         T_D0
#define get_dc_track_type()                  T_D1
#define get_dc_track_type_highspeed()        T_D2
#define get_dc_track_type_emu_lowspeed()     T_D0
#define get_dc_track_type_emu()              T_D1
#define get_dc_track_type_emu_highspeed()    T_D2
#define get_15dc_track_type_lowspeed()       T_d0
#define get_15dc_track_type()                T_d1
#define get_15dc_track_type_highspeed()      T_d2
#define get_15dc_track_type_emu_lowspeed()   T_d0
#define get_15dc_track_type_emu()            T_d1
#define get_15dc_track_type_emu_highspeed()  T_d2
// для двусистемных
#define get_ddc_track_type_lowspeed()               T_2D
#define get_ddc_track_type()                        T_2D
#define get_ddc_track_type_highspeed()              T_2D
#define get_ddc_track_type_emu_lowspeed()           T_2D
#define get_ddc_track_type_emu()                    T_2D
#define get_ddc_track_type_emu_highspeed()          T_2D
#define get_acdc_track_type_lowspeed()              T_2S
#define get_acdc_track_type()                       T_2S
#define get_acdc_track_type_highspeed()             T_2S
#define get_acdc_track_type_emu_lowspeed()          T_2S
#define get_acdc_track_type_emu()                   T_2S
#define get_acdc_track_type_emu_highspeed()         T_2S
// для метро
#define get_subway_track_type()               T_SW
#define get_normal_track_type_diesel_subway() T_SA

// Шаблоны для родов тока
#define not_ER15DC()                     \
((tile_powers_railtype("T_d0") == 0) &&  \
 (tile_powers_railtype("T_d1") == 0) &&  \
 (tile_powers_railtype("T_d2") == 0))    \

#define not_ER3DC()                      \
((tile_powers_railtype("T_D0") == 0) &&  \
 (tile_powers_railtype("T_D1") == 0) &&  \
 (tile_powers_railtype("T_D2") == 0))    \

#define not_ER15AC()                     \
((tile_powers_railtype("T_a0") == 0) &&  \
 (tile_powers_railtype("T_a1") == 0) &&  \
 (tile_powers_railtype("T_a2") == 0))    \

#define not_ER25AC()                     \
((tile_powers_railtype("T_A0") == 0) &&  \
 (tile_powers_railtype("T_A1") == 0) &&  \
 (tile_powers_railtype("T_A2") == 0))    \

#define is_ER15DC()                      \
((tile_powers_railtype("T_d0") == 1) ||  \
 (tile_powers_railtype("T_d1") == 1) ||  \
 (tile_powers_railtype("T_d2") == 1))    \

#define is_ER3DC()                       \
((tile_powers_railtype("T_D0") == 1) ||  \
 (tile_powers_railtype("T_D1") == 1) ||  \
 (tile_powers_railtype("T_D2") == 1))    \

#define is_ER15AC()                      \
((tile_powers_railtype("T_a0") == 1) ||  \
 (tile_powers_railtype("T_a1") == 1) ||  \
 (tile_powers_railtype("T_a2") == 1))    \

#define is_ER25AC()                      \
((tile_powers_railtype("T_A0") == 1) ||  \
 (tile_powers_railtype("T_A1") == 1) ||  \
 (tile_powers_railtype("T_A2") == 1))    \

#define is_ER15DC_ds(name, nameERDD, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER15DC())     \
{ 1: nameERDD;                                   \
     nameother; }                                \

#define is_ER3DC_ds(name, nameERD, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER3DC())    \
{ 1: nameERD;                                  \
     nameother; }                              \

#define is_ER15AC_ds(name, nameERAA, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER15AC())     \
{ 1: nameERAA;                                   \
     nameother; }                                \

#define is_ER25AC_ds(name, nameERA, nameother)  \
switch (FEAT_TRAINS,SELF, name, is_ER25AC())    \
{ 1: nameERA;                                   \
     nameother; }                               \

// Определение свойств в зависимости от типа пути

#define engine_change_DDC(name, suffix)                         \
is_ER15DC_ds(name##_2##suffix, name##_15DC##suffix, return 0)   \
is_ER3DC_ds(name##suffix, name##_DC##suffix, name##_2##suffix)  \

#define engine_change_AC_DC(name)                                \
is_ER3DC_ds(name##_2##suffix, name##_DC##suffix, return 0)       \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)  \

#define engine_change_AAC_DC(name)                                     \
is_ER3DC_ds(name##_3##suffix, name##_DC##suffix, return 0)             \
is_ER15AC_ds(name##_2##suffix, name##_15AC##suffix, name##_3##suffix)  \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)        \

#define engine_change_AAC_DDC(name)                                    \
is_ER15DC_ds(name##_4##suffix, name##_15DC##suffix, return 0)          \
is_ER3DC_ds(name##_3##suffix, name##_DC##suffix, name##_4##suffix)     \
is_ER15AC_ds(name##_2##suffix, name##_15AC##suffix, name##_3##suffix)  \
is_ER25AC_ds(name##suffix, name##_AC##suffix, name##_2##suffix)        \

// end
