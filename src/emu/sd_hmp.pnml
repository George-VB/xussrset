// emu_sd_hmp

#define PROP_emu_sd_m_CF  8
#define PROP_emu_sd_m_RC  59
#define PROP_emu_sd_m_SD  PROP_emu_sd_h_SD
#define PROP_emu_sd_m_WT  59
#define PROP_emu_sd_m_TE  95.0
#define PROP_emu_sd_m_PR  680
#define PROP_emu_sd_m_CC  106

#define PROP_emu_sm_m_CF  8
#define PROP_emu_sm_m_RC  60
#define PROP_emu_sm_m_SD  85
#define PROP_emu_sm_m_WT  61.5
#define PROP_emu_sm_m_TE  96.1
#define PROP_emu_sm_m_PR  680
#define PROP_emu_sm_m_CC  106

#define IMAGEFILE  "src/emu/sd_hmp.png"
purchase_sprites_with_icon(emu_sd_hmp, 18, 0, 15dc)
EMU_head_middle_sp2_sprites(12, emu_sd_hmp_v1_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/sm_hmp.png"
EMU_head_middle_sp2_sprites(12, emu_sm_hmp_v1_mu, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, emu_sd_hmp_mu_sprites_left,
  (cargo_subtype == 0xE0) * 3 +                     // 15/3DC
  ((cargo_subtype == 0xE1) && (is_ER3DC())) * 3 +   // 3DC
  ((cargo_subtype == 0xE1) && (not_ER3DC())) * 2 +  // not 3DC
  ((cargo_subtype < 0xE0) && (is_ER15DC())) * 1)    // 15DC
{ 0: emu_sd_hmp_v1_mu_normal_sprites_left;
  1: emu_sd_hmp_v1_mu_sprites_left;
  2: emu_sm_hmp_v1_mu_normal_sprites_left;
  3: emu_sm_hmp_v1_mu_sprites_left;
     align_12_sprites; }

switch (FEAT_TRAINS, SELF, emu_sd_hmp_mu_sprites_right,
  (cargo_subtype == 0xE0) * 3 +                     // 15/3DC
  ((cargo_subtype == 0xE1) && (is_ER3DC())) * 3 +   // 3DC
  ((cargo_subtype == 0xE1) && (not_ER3DC())) * 2 +  // not 3DC
  ((cargo_subtype < 0xE0) && (is_ER15DC())) * 1)    // 15DC
{ 0: emu_sd_hmp_v1_mu_normal_sprites_right;
  1: emu_sd_hmp_v1_mu_sprites_right;
  2: emu_sm_hmp_v1_mu_normal_sprites_right;
  3: emu_sm_hmp_v1_mu_sprites_right;
     align_12_sprites; }

switch (FEAT_TRAINS, SELF, emu_sd_hmp_mu_notpowered_sprites_left,
  cargo_subtype >= 0xE0)
{ 0: emu_sd_hmp_v1_mu_notpowered_sprites_left;
     emu_sm_hmp_v1_mu_notpowered_sprites_left; }

switch (FEAT_TRAINS, SELF, emu_sd_hmp_mu_notpowered_sprites_right,
  cargo_subtype >= 0xE0)
{ 0: emu_sd_hmp_v1_mu_notpowered_sprites_right;
     emu_sm_hmp_v1_mu_notpowered_sprites_right; }

// перехватить ветку верных голов и добавить на них доп. проверки
MU_power_template12(emu_sd_hmp, sr_type1947_h, sr_type1947_hb, sr_type1947_hmp,
                                sr_type1951_h, sr_type1951_hb, sr_type1951_hmp,
                                emu_sv_h, emu_sv_hb, emu_sv_hmp,
                                emu_sd_h, emu_sd_hb, emu_sd_hmp)

engine_direction_template4(emu_sd_hmp, emu_sd_hmp,  sr_type1947_hmp, sr_type1951_hmp, emu_sv_hmp)
map_sprites(emu_sd_hmp_2_direction_template, emu_sd_hmp_sprites_start)

switch (FEAT_TRAINS, PARENT, emu_sd_hmp_2_next_can_attach_wagon_template,
  emu_s_count() < 3)
{ 1: type_head_motor_pant_head_add_optional;
     type_head_add_optional; }

MU_attach_wagon_icon_template12(emu_sd_hmp_2,
                                sr_type1947_h, sr_type1947_hb, sr_type1947_hmp,
                                sr_type1951_h, sr_type1951_hb, sr_type1951_hmp,
                                emu_sv_h, emu_sv_hb, emu_sv_hmp,
                                emu_sd_h, emu_sd_hb, emu_sd_hmp, type_head_motor_pant)

switch (FEAT_TRAINS, SELF, emu_sd_hmp_sprites_left_current,
  cargo_subtype + 256 * (current_year < 1946) + 256 * (1 - enable_icons) )
{
  0x00: icon_sprites_15dc;
  0xE0: icon_sprites_ddc;
  0xE1: icon_sprites_3dc;
        dummy_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sd_hmp_sprites_left_back,
  cargo_subtype + 256 * (current_year < 1946) + 256 * (1 - enable_icons) )
{
  0x00: icon_sprites_back1;
  0xE0: icon_sprites_back2;
  0xE1: icon_sprites_back1;
        dummy_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sd_hmp_sprites_left_depot,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{
     1: emu_sd_hmp_sprites_left_back;
     2: emu_sd_hmp_sprites_left_current;
  0..7: emu_sd_hmp_2_sprites_start_sp;
     return CB_FAILED;
}
switch (FEAT_TRAINS, SELF, emu_sd_hmp_direction_template,
  getbits(extra_callback_info1, 0, 8))
{
  0x10..0x1F: emu_sd_hmp_sprites_left_depot;
              emu_sd_hmp_2_sprites_start_sp;
}

long_vehicle_advanced(emu_sd_hmp, emu_sd_hmp_direction_template)

// пантографы симметричны, искрит второй
engine_electric1_1_effect(emu_sd_hmp_0_create_effect_sprites, 5)
engine_effects_MU_emu_s(emu_sd_hmp_0, emu_sd_hmp_0_create_effect_sprites_left)

     is_ER15DC_ds(emu_sd_hmp_2_create_effect, emu_sd_hmp_0_create_effect, return disable_create_effect())
  engine_change_refit(emu_sd_hmp_1_create_effect, emu_sd_hmp_2_create_effect, emu_sd_hmp_0_create_effect)

  is_ER3DC_ds(emu_sd_hmp_sr3_create_effect, emu_sd_hmp_0_create_effect, return disable_create_effect())
engine_change_refit_shift(emu_sd_hmp_create_effect, emu_sd_hmp_1_create_effect, emu_sd_hmp_sr3_create_effect, 1)

    engine_capacity_MU_emu_s(emu_sd_hmp_sd, PROP_emu_sd_m_CC)
    engine_capacity_MU_emu_s(emu_sd_hmp_sm, PROP_emu_sm_m_CC)
  engine_change_refit(emu_sd_hmp_1_cargo_capacity, emu_sd_hmp_sd_cargo_capacity, emu_sd_hmp_sm_cargo_capacity)

  engine_capacity_MU_emu_s(emu_sd_hmp_sm3, PROP_sr3_m_CC)
engine_change_refit_shift(emu_sd_hmp_cargo_capacity, emu_sd_hmp_1_cargo_capacity, emu_sd_hmp_sm3_cargo_capacity, 1)

        engine_power_MU_emu_s(emu_sd_hmp_0_DC_2, NO_POWER)
      engine_0_power_alt(emu_sd_hmp_0_DC, emu_sd_hmp_0_DC_2_power)

      engine_power_MU_emu_s(emu_sd_hmp_0_15DC, PROP_emu_sd_m_PR)
    is_ER15DC_ds(emu_sd_hmp_0_power, emu_sd_hmp_0_15DC_power, emu_sd_hmp_0_DC_power)

    engine_power_MU_emu_s(emu_sd_hmp_sm, PROP_emu_sm_m_PR)
  engine_change_refit(emu_sd_hmp_1_power, emu_sd_hmp_0_power, emu_sd_hmp_sm_power)

      engine_power_MU_emu_s(emu_sd_hmp_sr3_15DC_2, NO_POWER)
    engine_0_power_alt(emu_sd_hmp_sr3_15DC, emu_sd_hmp_sr3_15DC_2_power)

    engine_power_MU_emu_s(emu_sd_hmp_sr3_DC, PROP_sr3_m_PR)
  is_ER3DC_ds(emu_sd_hmp_sr3_power, emu_sd_hmp_sr3_DC_power, emu_sd_hmp_sr3_15DC_power)
engine_change_refit_shift(emu_sd_hmp_power, emu_sd_hmp_1_power, emu_sd_hmp_sr3_power, 1)

    engine_refit_cost_for_livery_change2(emu_sd_hmp_3, 6, 7)
  engine_refit_cost_for_range_livery_change(emu_sd_hmp_2, 0xE0, 0xE0, 6, emu_sd_hmp_3_refit_cost)
engine_refit_cost_for_range_livery_change(emu_sd_hmp, 0xE1, 0xE1, 4, emu_sd_hmp_2_refit_cost)

// TODO change running cost according to refit
RC_head_check_emu_s(emu_sd_hmp)
switch (FEAT_TRAINS, SELF, emu_sd_hmp_running_cost_factor,
[  STORE_TEMP(34, 0),  // Моторы
   STORE_TEMP(5, 1),   // Бригада
   STORE_TEMP(12, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(8, 4),   // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_emu_sd_m_SD, 6),                                  // Скорость
   STORE_TEMP(round(PROP_emu_sd_m_WT), 7),                           // Тара
   STORE_TEMP(round(PROP_emu_sd_m_WT + PROP_emu_sd_m_CC / 16), 8)])  // Максимальная масса
{ emu_sd_hmp_check_running_cost_factor; }

name_in_group_subgroup(emu_sd_hmp, string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_NAME_SD_HMP)),
                                   string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_LONGNAME_SD_HMP)),
                                   string(STR_NAME_SD))

hint_MU_with_sme2_2fact(emu_sd_hmp_b1946,
     calc_loading(PROP_emu_sd_m_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HMP_15DC,
     STR_SECTIONS_EMU_S, STR_NAME_SV, STR_NAME_SD,
     1932, 1941,
     fact_mytishchi(),
     string(STR_PURCHASE_HINT_FACTORY_DINAMO))
hint_MU_with_sme3_2fact_comment(emu_sd_hmp_a1946,
     calc_loading(PROP_emu_sd_m_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HMP_15DC,
     STR_SECTIONS_EMU_S, STR_NAME_SV, STR_NAME_SD, STR_NAME_SR,
     1932, 1941,
     fact_mytishchi(),
     string(STR_PURCHASE_HINT_FACTORY_DINAMO),
     string(STR_PURCHASE_HINT_UPGRADE_AVAILABLE,
            string(STR_REFIT_FACTORY_GENERAL_TYPE_R, string(STR_NAME_SM), string(STR_ERDDC))))
hint_MU_with_sme3_2fact_comment(emu_sd_hmp_a1952,
     calc_loading(PROP_emu_sd_m_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HMP_15DC,
     STR_SECTIONS_EMU_S, STR_NAME_SV, STR_NAME_SD, STR_NAME_SR,
     1932, 1941,
     fact_mytishchi(),
     string(STR_PURCHASE_HINT_FACTORY_DINAMO),
     string(STR_PURCHASE_HINT_UPGRADE_AVAILABLE,
            string(STR_REFIT_FACTORY_GENERAL_TYPE_R, string(STR_NAME_SM3), string(STR_ER3DC))))
hint_change_after2(emu_sd_hmp, 1946, 1952)

item (FEAT_TRAINS, emu_sd_hmp, 443) {
  property {
    name: string(STR_NAME_SD_HMP);
    vehicle_dates(1932, 1941, 20, 10, 8, PROP_emu_sd_m_CF)
    vehicle_emu(ddc, PROP_emu_sd_m_PR, PROP_emu_sd_m_WT, PROP_emu_sd_m_TE, PROP_emu_sd_m_CC, 2 * DOUBLE_DOOR, _lowspeed)
    vehicle_group(emu_sd_h)
  }
  graphics {
    purchase_menu(PROP_emu_sd_m_CF, PROP_emu_sd_m_RC, PROP_emu_sd_m_SD, PROP_emu_sd_m_WT, PROP_emu_sd_m_TE, PROP_emu_sd_m_PR, PROP_emu_sd_m_CC)
        additional_text: emu_sd_hmp_additional_text;
       articulated_part: articulated_part_dummy4;
       can_attach_wagon: emu_s_can_attach_wagon;
       cargo_age_period: return CAP_00033_VERY_FAST;
         cargo_capacity: emu_sd_hmp_cargo_capacity;
     cargo_subtype_text: emu_sd_cargo_subtype_text;
         colour_mapping: any_cc_colour;
          create_effect: emu_sd_hmp_create_effect;
                default: emu_sd_hmp_sprites;
                   name: emu_sd_hmp_name;
                  power: emu_sd_hmp_power;
               purchase: emu_sd_hmp_purchase_sprites;
             refit_cost: emu_sd_hmp_refit_cost;
    running_cost_factor: emu_sd_hmp_running_cost_factor;
                  speed: return PROP_emu_sd_m_SD;
             start_stop: emu_s_start_stop;
  }
}

long_name_template(emu_sd_hmp, STR_LONGNAME_SD_HMP)
allow_dcemu(emu_sd_hmp)
