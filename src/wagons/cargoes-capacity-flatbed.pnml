// Плотности груза при перевозке платформами

#define CARGO_HEIGHT           1
#define CARGO_HEIGHT_WITH_COL  5 / 2
#define CARGO_HEIGHT_BIG_BOX   2

switch (FEAT_TRAINS, SELF, flatbed_cargo_capacity, cargo_type_in_veh)
{
// begin main block
// --- Bulk cargoes
// ----- Bulk cargoes - Clays
  CLAY: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1700, cargo_unit_weight);
  LIME: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1550, cargo_unit_weight);  // Известняк кусками, broken limestone        Твердое
// ----- Bulk cargoes - Ores
  AORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1280, cargo_unit_weight);
  CORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2590, cargo_unit_weight);  // Медная руда красная  (куприт), copper ore 1940-2590
  FECR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2190, cargo_unit_weight);
  IORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2470, cargo_unit_weight);  // Гематит (красный железняк) дробленый, iron ore - crushed 2100-2900
  MNO2: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7430, cargo_unit_weight);
  PHOS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 960, cargo_unit_weight);   // Суперфосфат, acid phosphate
  PORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 5015, cargo_unit_weight);  // Пирит цельный (кошачье золото, железный колчедан, серный колчедан, камень инков), pyrite (fool's gold) 2400-5015
  SULP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1310, cargo_unit_weight);  // Сера кусковая, lump sulphur
// ----- Bulk cargoes - General
  COAL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 850, cargo_unit_weight);          // Уголь антрацит кусковой сухой (1350-1600 насыпная 800-850)
  COCO: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 3604, cargo_unit_weight);         // Медный купорос молотый, ground copper sulfate --- Copper Concentrate
  COKE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 500, cargo_unit_weight);          // Кокс (1300 насыпная 500)
  FERT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 800, cargo_unit_weight);          // Удобрения минеральные        800-1200
  FMSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 250, cargo_unit_weight);  // Удобрения минеральные        800-1200
  GRVL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1800, cargo_unit_weight);
  PEAT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 800, cargo_unit_weight);   // Торф сырой, moist peat
  RCYC: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 480, cargo_unit_weight);   // Бытовые отходы, бытовой мусор, garbage, household rubbish
  SALT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1200, cargo_unit_weight);  // Соль пищевая тонкого помола, fine salt
  SAND: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1440, cargo_unit_weight);  // Песок сухой рыхлый, loose sand
  SCMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1660, cargo_unit_weight);  // Металлолом  (https://www.konsom.ru/media/2017/06/Raschet-nasypnoj-plotnosti-stalnogo-metalloloma-v-sovkah-dlya-skrapa-s-ispolzovaniem-trehmernoj-kamery.pdf)
  SCRP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1660, cargo_unit_weight);  // Металлолом
  SLAG: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2110, cargo_unit_weight);  // Шлак топочный цельный, solid slag
  WSTE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 480, cargo_unit_weight);
// --- Piece cargoes
// ----- Piece cargoes - Wood
  BATT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_WITH_COL, 500, cargo_unit_weight);
  TWOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_WITH_COL, 590, cargo_unit_weight);  // Дерево сухое, платан
  WDPR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_WITH_COL, 500, cargo_unit_weight);
  WOOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_WITH_COL, 450, cargo_unit_weight);  // Дерево сухое, ель
// ----- Piece cargoes - Steel
  ALUM: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2700, cargo_unit_weight);  // Плотность алюминиевого проката 2,65– 2,7 г см³
  COPR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2590, cargo_unit_weight);  // Медная руда красная  (куприт), copper ore
  CSTI: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Чугун TODO определить транспортную плотность
  IRON: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7880, cargo_unit_weight);  // Железо чистое Iron Fe
  METL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7900, cargo_unit_weight);
  PIPE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700/4, cargo_unit_weight);
  STAL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Стальные сплавы TODO определить транспортную плотность
  STCB: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Углеродистая сталь TODO определить транспортную плотность
  STEL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);
  STSE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Металлоконструкции TODO определить транспортную плотность
  STSH: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Листовая сталь     TODO определить транспортную плотность
  STST: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Нержавеющая сталь TODO определить транспортную плотность
  STWR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7700, cargo_unit_weight);  // Стальная проволока TODO определить транспортную плотность
  ZINC: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 7130, cargo_unit_weight);  // Цинк чистый Zinc Zn
// ----- Piece cargoes - Special
  BRCK: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1800, cargo_unit_weight);
  YETI: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1500, cargo_unit_weight);  // YETI
  YETY: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1500, cargo_unit_weight);  // YETI dudes
// --- Piece cargoes - Large boxes
  ENSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 300, cargo_unit_weight);
  FOCA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 5000, cargo_unit_weight);  // Forging and Castings - FOCA - Штучный - Литые детали и формы
  GOOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 400, cargo_unit_weight);
  MNSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 300, cargo_unit_weight);
  POWR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 300, cargo_unit_weight);
  TYRE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 400, cargo_unit_weight);
  VBOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 400, cargo_unit_weight);
  VENG: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 400, cargo_unit_weight);
  VPTS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 400, cargo_unit_weight);
// --- Piece cargoes - Vehicles
  VEHI: return ((ecs_mach_on == 1) || (otis_on == 1) ? min(LOAD_TEMP(4),
                                                           calculate_capacity(LOAD_TEMP(0), 32000, 1000, cargo_unit_weight))  :
                                                           calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2000, cargo_unit_weight));
// --- Hopper cargos
// ----- Hopper cargos - Fertilizer
  NITR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1200, cargo_unit_weight);  // Селитра натриевая измельченная, ground sodium nitrate
// ----- Hopper cargos - Cement
  ALO_: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 3950, cargo_unit_weight);  // Aluminia - Глинозем
  BDMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 1600, cargo_unit_weight);
//   CBLK,
//   CMNT,
  KAOL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT, 2540, cargo_unit_weight);  // Каолинит плотность 2540—2600 кг/м³
//   POTA,
//   QLME,
//   SASH,
// ----- Hopper cargos - Grains
//   CERE,
//   CTCD,
//   GRAI,
//   MAIZ,
//   OLSD,
//   TOFF,
//   WHEA,
// --- Liquid cargoes
// ----- Liquid cargoes - Edibles
//   BEER,
//   COLA,
//   EOIL,
//   FZDR,
//   WATR,
// ----- Liquid cargoes - Oil products
//   OIL_,
//   PETR,
//   RFPR,
// ----- Liquid cargoes - Chemicals
//   BUBL,
//   COAT,
//   DYES,
//   NHNO,
//   PLAS,
//   PLST,
//   RUBR,
//   SOAP,
// ----- Liquid cargoes - Dangerous & heated
//   ACID,
//   CTAR,
//   LYE_,
// ----- Liquid cargoes - Liquified gases
//   C2H4,
//   CHLO,
//   FUEL,
//   H2__,
//   N7__,
//   NH3_,
//   O2__,
// --- Refregirated cargoes
//   FISH,
//   FOOD,
//   FRUI,
//   FRUT,
//   FRVG,
//   MILK,
// --- Boxcar cargoes
// ----- Boxcar cargoes - Sacks
//   BEAN,
//   CASS,
//   FICR,
//   JAVA,
//   NUTS,
//   RSGR,
//   SGBT,
//   SGCN,
//   SUGR,
//   SWET,
//   WOOL,
// ----- Boxcar cargoes - Boxes
//   BOOM,
//   CERA,
//   GLAS,
//   PAPR,
//   PPAR,
  TOYS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * CARGO_HEIGHT_BIG_BOX, 300, cargo_unit_weight);
// ----- Boxcar cargoes - Livestock
//   LVST,
// --- Special cargoes
// ----- Special cargoes - Valuables & Mail
//   DIAM,
//   GOLD,
//   MAIL,
//   VALU,
// ----- Special cargoes - Passengers
// ------- Special cargoes - Passengers 1 class
//   TOUR,
// ------- Special cargoes - Passengers 2 class
//   PASS,
// ------- Special cargoes - Passengers 3 class
//   YETI,
//   YETY,
// ----- Special cargoes - Nuclear
//   NWST,
  URAN: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 3 / 2, 5000, cargo_unit_weight);  // Абстрактный груз из YETI set
// end main block
        return 0;
}
