// paiment for cleaning after cargo

// TODO currently payment is taken on class change. instead payment should be a sum of the cleaning cost (depending on previous cargo) and preparation cost (depending on new cargo)
// calculations should be done via register
switch (FEAT_TRAINS, SELF, oil_tanker_refit_cost,         getbits(extra_callback_info1, 0, 8)) { cargo_check_oil_tanker(return 0 | CB_RESULT_AUTOREFIT)         return 4; }
switch (FEAT_TRAINS, SELF, oilp_tanker_refit_cost,        getbits(extra_callback_info1, 0, 8)) { cargo_check_petr_tanker(return 0 | CB_RESULT_AUTOREFIT)        return 5; }
switch (FEAT_TRAINS, SELF, food_tanker_refit_cost,        getbits(extra_callback_info1, 0, 8)) { cargo_check_food_tanker(return 0 | CB_RESULT_AUTOREFIT)        return 1; }
switch (FEAT_TRAINS, SELF, chem_gen_tanker_refit_cost,    getbits(extra_callback_info1, 0, 8)) { cargo_check_chem_gen_tanker(return 0 | CB_RESULT_AUTOREFIT)    return 2; }
switch (FEAT_TRAINS, SELF, chem_dang_tanker_refit_cost,   getbits(extra_callback_info1, 0, 8)) { cargo_check_chem_dang_tanker(return 0 | CB_RESULT_AUTOREFIT)   return 7; }
switch (FEAT_TRAINS, SELF, chem_heated_tanker_refit_cost, getbits(extra_callback_info1, 0, 8)) { cargo_check_chem_heated_tanker(return 0 | CB_RESULT_AUTOREFIT) return 6; }
switch (FEAT_TRAINS, SELF, cement_hopper_refit_cost,      getbits(extra_callback_info1, 0, 8)) { cargo_check_bulk_cargo_tanker(return 0 | CB_RESULT_AUTOREFIT)  return 2; }
switch (FEAT_TRAINS, SELF, gas_chem_tanker_refit_cost,    getbits(extra_callback_info1, 0, 8)) { cargo_check_gas_chem_tanker(return 0 | CB_RESULT_AUTOREFIT)    return 3; }
switch (FEAT_TRAINS, SELF, gas_cryo_tanker_refit_cost,    getbits(extra_callback_info1, 0, 8)) { cargo_check_gas_cryo_tanker(return 0 | CB_RESULT_AUTOREFIT)    return 2; }
switch (FEAT_TRAINS, SELF, gas_natural_tanker_refit_cost, getbits(extra_callback_info1, 0, 8)) { cargo_check_gas_natural_tanker(return 0 | CB_RESULT_AUTOREFIT) return 1; }

switch (FEAT_TRAINS, SELF, tanker_refit_cost, cargo_type_in_veh) {
  cargo_check_oil_tanker(oil_tanker_refit_cost)
  cargo_check_petr_tanker(oilp_tanker_refit_cost)
  cargo_check_food_tanker(food_tanker_refit_cost)
  cargo_check_chem_gen_tanker(chem_gen_tanker_refit_cost)
  cargo_check_chem_dang_tanker(chem_dang_tanker_refit_cost)
  cargo_check_chem_heated_tanker(chem_heated_tanker_refit_cost)
  cargo_check_bulk_cargo_tanker(cement_hopper_refit_cost)
  cargo_check_gas_chem_tanker(gas_chem_tanker_refit_cost)
  cargo_check_gas_cryo_tanker(gas_cryo_tanker_refit_cost)
  cargo_check_gas_natural_tanker(gas_natural_tanker_refit_cost)
  return 0 | CB_RESULT_AUTOREFIT;
}

// paiment for cleaning for cargo
switch (FEAT_TRAINS, SELF, grain_boxcar_refit_cost, getbits(extra_callback_info1, 0, 8)) { cargo_check_grain_hopperlist(return 0 | CB_RESULT_AUTOREFIT) return 1; }
switch (FEAT_TRAINS, SELF, boxcar_refit_cost, cargo_type_in_veh)
{
  cargo_check_grain_hopperlist(grain_boxcar_refit_cost)
  return 0 | CB_RESULT_AUTOREFIT;
}

// allow autorefit for containers

switch (FEAT_TRAINS, SELF, container20_a1972_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_gen_containerlist(return (0 | CB_RESULT_AUTOREFIT))
  return 1;
}

switch (FEAT_TRAINS, SELF, container20_a1988_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_ref_containerlist(return (0 | CB_RESULT_AUTOREFIT))
  container20_a1972_refit_cost;
}

switch (FEAT_TRAINS, SELF, container20_a1995_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_tank_containerlist(return (0 | CB_RESULT_AUTOREFIT))
  container20_a1988_refit_cost;
}

switch (FEAT_TRAINS, SELF, container_20_refit_cost,
  (date_of_last_service >= date(1972,1,1)) +
  (date_of_last_service >= date(1988,1,1)) +
  (date_of_last_service >= date(1995,1,1)))
{
  1: container20_a1972_refit_cost;
  2: container20_a1988_refit_cost;
  3: container20_a1995_refit_cost;
     return 0;
}

switch (FEAT_TRAINS, SELF, container40_a1972_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_gen_containerlist(return (0 | CB_RESULT_AUTOREFIT))
  return 1;
}

switch (FEAT_TRAINS, SELF, container40_a1988_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_ref_containerlist(return (0 | CB_RESULT_AUTOREFIT))
  container40_a1972_refit_cost;
}

switch (FEAT_TRAINS, SELF, container40_a1995_refit_cost,
  getbits(extra_callback_info1, 0, 8))
{
  cargo_check_tank_containerlist(return 0)
  container40_a1988_refit_cost;
}

switch (FEAT_TRAINS, SELF, container_40_refit_cost,
  (date_of_last_service >= date(1972,1,1)) +
  (date_of_last_service >= date(1988,1,1)) +
  (date_of_last_service >= date(1995,1,1)))
{
  1: container40_a1972_refit_cost;
  2: container40_a1988_refit_cost;
  3: container40_a1995_refit_cost;
     return 0;
}

switch (FEAT_TRAINS, SELF, container_20and40_refit_cost, 0)
{ container_20_refit_cost; }

switch (FEAT_TRAINS, SELF, container_2_20or40_refit_cost, 0)
{
  container_20_refit_cost;
}

// Защита от выбора груза, контейнеры для которого ещё не появились

switch (FEAT_TRAINS, SELF, container_a1972_bitmask_vehicle_info,
  cargo_type_in_veh)
{
  cargo_check_gen_containerlist(return 0)
  return bitmask(FLAG_INADMISSIBLE_CARGO);
}

switch (FEAT_TRAINS, SELF, container_a1988_bitmask_vehicle_info,
  cargo_type_in_veh)
{
  cargo_check_ref_containerlist(return 0)
  container_a1972_bitmask_vehicle_info;
}

switch (FEAT_TRAINS, SELF, container_a1995_bitmask_vehicle_info,
  cargo_type_in_veh)
{
  cargo_check_tank_containerlist(return 0)
  container_a1988_bitmask_vehicle_info;
}

switch (FEAT_TRAINS, SELF, container_bitmask_vehicle_info2,
  (current_year >= 1972) +
  (current_year >= 1988) +
  (current_year >= 1995))
{
  0: return bitmask(FLAG_INADMISSIBLE_CARGO);
  1: container_a1972_bitmask_vehicle_info;
  2: container_a1988_bitmask_vehicle_info;
     container_a1995_bitmask_vehicle_info;
}

switch (FEAT_TRAINS, SELF, container_bitmask_vehicle_info,
  cargo_capacity)
{
  0: return bitmask(FLAG_INADMISSIBLE_CARGO);
     container_bitmask_vehicle_info2;
}
