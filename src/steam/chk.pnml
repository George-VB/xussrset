// chk

#define IMAGEFILE  "src/steam/chk.png"
purchase_sprites(chk_v1, 0, 0)
steam_sprites1(6, chk_engine_b1890, 32,  40)
tender_sprites(4, chk_tender_b1890, 447,  40)
#undef IMAGEFILE
#define IMAGEFILE  "src/steam/chk_1890.png"
purchase_sprites(chk_v2, 0, 0)
steam_sprites1(6, chk_engine_a1890, 32,  40)
tender_sprites(5, chk_tender_a1890, 447,  40)
#undef IMAGEFILE
#define IMAGEFILE  "src/steam/chk_1891.png"
purchase_sprites(chk_v3, 0, 0)
steam_sprites1(6, chk_engine_a1891, 32,  40)
#undef IMAGEFILE
purchase_sprites_select2(chk, 1890, 1891)
engine_build_year2_template(chk_engine, 1890, 1891, start, )
engine_build_year_template(chk_tender, 1890, start, )
steamer_direction_template(chk, _sprites_start)
long_vehicle(chk)

switch (FEAT_TRAINS, SELF, chk_running_cost_factor,
[  STORE_TEMP(41 + 6 * (build_year >= 1890), 0),  // Моторы
   STORE_TEMP(6 + 1 * (build_year >= 1890), 1),   // Бригада
   STORE_TEMP(14 + 2 * (build_year >= 1890), 2),  // Износ
   STORE_TEMP(0, 3),                              // Сопровождение
   STORE_TEMP(10 + 1 * (build_year >= 1890), 4),  // ТО
   STORE_TEMP(1, 5),                              // Сертификация

   STORE_TEMP(45 + 21 * (build_year >= 1890), 6),                                 // Скорость
   STORE_TEMP(48 + 30 + 5 * (build_year >= 1890) - 3 * (build_year >= 1891), 7),  // Тара
   STORE_TEMP(LOAD_TEMP(7), 8)])                                                  // Максимальная масса
{ all_running_cost_factor; }                                                      // 72 + 10

engine_tender(chk)
engine_tender_length_change_build_after(chk, 5, 1, 3, 1,
                                             5, 1, 4, 1, 1890)
engine_cost_change_build_after(chk, 3,
                                    4, 1890)
engine_steam_1_effect(chk_create_effect, -3, 11)
engine_speed_change_build_after(chk, 45,
                                     47, 1891)
engine_weight_change_build_after2(chk, 48+30,
                                       53+30, 1890,
                                       50+30, 1891)
engine_TE_change_build_after2(chk, get_tec_int(70.0, 48+30),
                                   get_tec_int(88.0, 53+30), 1890,
                                   get_tec_int(85.0, 50+30), 1891)
engine_power_change_build_after2(chk, 430,
                                      550, 1890,
                                      530, 1891)
engine_penalise_speed0(chk)
hint_engine_5fact(chk,
     STR_PURCHASE_HINT_ENGINE_TYPE_FREIGHT_STEAM,
     STR_PURCHASE_HINT_SECTIONS_1,
     1879, 1901,
     string(STR_PURCHASE_HINT_FACTORY_KOLOMNA),
     fact_putilovsky(),
     string(STR_PURCHASE_HINT_FACTORY_BRYANSK),
     string(STR_PURCHASE_HINT_FACTORY_NEVSKY),
     fact_kharkiv())

item (FEAT_TRAINS, chk, 724) {
  property {
    name: string(STR_NAME_CHK);
    vehicle_dates(1879, 1901, 40, 10, 5, 3)
    vehicle_cargo()
    vehicle_steam(590, 48+30, 94.0)
  }
  graphics {
                        default: chk_sprites;
                       purchase: chk_purchase_sprites;
               articulated_part: chk_articulated_part;
                         length: chk_length;
               can_attach_wagon: any_can_attach_wagon;
                     start_stop: any_start_stop;
                          speed: chk_speed;
                         weight: chk_weight;
    tractive_effort_coefficient: chk_tractive_effort_coefficient;
                          power: chk_power;
                 purchase_speed: chk_purchase_speed;
           bitmask_vehicle_info: chk_bitmask_vehicle_info;
                 cargo_capacity: return 0;
                  create_effect: chk_create_effect;
                    cost_factor: chk_cost_factor;
            running_cost_factor: chk_running_cost_factor;
                 colour_mapping: steam_freight_colour_mapping;
                additional_text: chk_additional_text;
  }
}

long_name_template(chk, STR_LONGNAME_CHK)
models_default_cargo_template(chk)
allow_steamer(chk)
